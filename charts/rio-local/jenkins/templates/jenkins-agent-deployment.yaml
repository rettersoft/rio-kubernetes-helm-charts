apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-agent
  labels:
    app: jenkins
    component: agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
      component: agent
  template:
    metadata:
      labels:
        app: jenkins
        component: agent
    spec:
      serviceAccountName: jenkins-sa
      initContainers:
        - name: kubeconfig-init
          image: busybox:latest
          command: [ "/bin/sh","-c" ]
          args:
            - |
              echo "Creating in-cluster kubeconfig in /work/config"
              cat <<EOF > /work/config
              apiVersion: v1
              clusters:
              - cluster:
                  certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                  server: https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
                name: in-cluster
              contexts:
              - context:
                  cluster: in-cluster
                  user: jenkins
                name: in-cluster
              current-context: in-cluster
              kind: Config
              preferences: {}
              users:
              - name: jenkins
                user:
                  token: $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              EOF
          volumeMounts:
            - name: kubeconfig-vol
              mountPath: /work
      containers:
        - name: jenkins-agent
          image: "{{ .Values.agentImage.repository }}:{{ .Values.agentImage.tag }}"
          imagePullPolicy: {{ .Values.agentImage.pullPolicy }}
          securityContext:
            runAsUser: 1000       # UID of the user inside the container
            runAsGroup: 1000      # GID of the user inside the container
          env:
            {{- range .Values.agentEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          command: [ "jenkins-agent" ]
          args: {{ toJson .Values.agentCommandArgs }}

          volumeMounts:
            - name: kubeconfig-vol
              mountPath: /home/jenkins/.kube
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: docker-bin
              mountPath: /usr/bin/docker
            - name: projects-config
              mountPath: /bitnami/jenkins/projects-config
            - name: ssh-key
              mountPath: /home/jenkins/.ssh
      volumes:
        - name: kubeconfig-vol
          emptyDir: { }
        - name: docker-sock
          hostPath:
            path: {{ .Values.hostPaths.dockerSockPath }}
            type: Socket
        - name: docker-bin
          hostPath:
            path: {{ .Values.hostPaths.dockerBinPath }}
            type: File

        - name: ssh-key
          configMap:
            name: jenkins-known-hosts
            items:
              - key: known_hosts
                path: known_hosts

        - name: projects-config
          configMap:
            name: jenkins-projects-config
            items:
              - key: projects-config.yaml
                path: projects-config.yaml
