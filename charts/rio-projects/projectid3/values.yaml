replicaCount: 1

extraEnv:
  test: value

command:
  - node
  - /opt/core-extension/dist/src/bin/user-code.js

service:
  type: ClusterIP
  port: 80
  targetPort: 80
  debugPort: 9229

#extraEnvFromSecret:

resources:
  limits:
    cpu: 0.5
    memory: 256Mi
  requests:
    cpu: 0.1
    memory: 256Mi
    
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

nodeSelector: {}

tolerations: []

affinity: {}
global:
  podAnnotations:
  # -- Environment variables that shared with all the pods
  env:
    PROJECT_ID: ${PROJECT_ID}
    USER_CODE_URL: 'http://${PROJECT_ID}-user-code.default.svc.cluster.local'
    SCHEDULER_API_URL: 'http://${PROJECT_ID}-rio-scheduler-api.default.svc.cluster.local'
    RDK_URL: 'http://${PROJECT_ID}-rio-rdk.default.svc.cluster.local'
  secret:
    MINIO_USERNAME: "minio"
    MINIO_PASSWORD: "minio123"
  # --  Image of the RIO CORE
  image:
    repository: ${REPOSITORY}
    tag: ${IMAGE_TAG}
    pullPolicy: IfNotPresent
  # -- The image of user code refer to: https://github.com/rettersoft/rio-kubernetes-user-code
  userImage:
    repository: ${REPOSITORY}
    tag: ${IMAGE_TAG}
    pullPolicy: IfNotPresent
  # -- Bucket storage
  objectStorage:
    # -- type of the object storage other options S3
    type: MINIO
  certificate:
    # -- What type of TLS certificate should be used?
    #    Available options:
    #    1) custom: A user-provided certificate.
    #       - You must create your own secret, for example:
    #         kubectl create secret tls my-cert-tls \
    #           --cert /path/to/tls.crt \
    #           --key /path/to/tls.key
    #       - Reference that secret in your Helm chart as needed.
    #    2) letsencrypt: Automatically request a certificate from Let's Encrypt.
    #
    #    Default is "custom".
    type: letsencrypt

rio-api:
  envFrom:
    - secretRef:
        name: rabbitmq-secrets
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: object-storage-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: scheduler-redis-secrets
    - secretRef:
        name: config-storage
    - secretRef:
        name: config-secret-root-api-key
  ingress:
    enabled: true
    canary: false
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
  resources:
    limits:
      cpu: 0.5
      memory: 256Mi
    requests:
      cpu: 0.1
      memory: 256Mi
  command:
    - node
    - /opt/core-extension/dist/src/bin/api.js

rio-rdk:
  envFrom:
    - secretRef:
        name: rabbitmq-secrets
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: object-storage-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: scheduler-redis-secrets
    - secretRef:
        name: config-storage
    - secretRef:
        name: config-secret-root-api-key
  resources:
    limits:
      cpu: 0.5
      memory: 256Mi
    requests:
      cpu: 0.1
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  command:
    - node
    - /opt/core-extension/dist/src/bin/rdk.js

rio-scheduler-api:
  envFrom:
    - secretRef:
        name: rabbitmq-secrets
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: object-storage-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: scheduler-redis-secrets
    - secretRef:
        name: config-storage
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  command:
    - node
    - /opt/core-extension/dist/src/bin/scheduler-api.js

rio-scheduler-async-consumer:
  envFrom:
    - secretRef:
        name: rabbitmq-secrets
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: object-storage-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: scheduler-redis-secrets
    - secretRef:
        name: config-storage
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  command:
    - node
    - /opt/core-extension/dist/src/bin/scheduler-async-consumer.js

rio-scheduler-cron-consumer:
  envFrom:
    - secretRef:
        name: rabbitmq-secrets
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: object-storage-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: scheduler-redis-secrets
    - secretRef:
        name: config-storage
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  command:
    - node
    - /opt/core-extension/dist/src/bin/scheduler-cron-consumer.js

rio-scheduler-task-consumer:
  envFrom:
    - secretRef:
        name: rabbitmq-secrets
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: object-storage-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: scheduler-redis-secrets
    - secretRef:
        name: config-storage
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  command:
    - node
    - /opt/core-extension/dist/src/bin/scheduler-task-consumer.js

rio-watcher-client-server-socket-io:
  envFrom:
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: config-storage
  autoscaling:
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 80
  command:
    - node
    - /opt/core-extension/dist/src/bin/watcher-client-socket.js

rio-watcher-socket-io:
  envFrom:
    - secretRef:
        name: mongo-secrets
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: config-storage
  autoscaling:
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 80
  command:
    - node
    - /opt/core-extension/dist/src/bin/watcher-mongo-socket.js


rio-scheduler-dashboard:
  envFrom:
    - secretRef:
        name: redis-secrets
    - secretRef:
        name: scheduler-redis-secrets
  image:
    repository: swr.tr-west-1.myhuaweicloud.com/rio-a101-test/scheduler-dashboard
    tag: 7
    pullPolicy: Always
  queues:
    - ${PROJECT_ID}_async
    - ${PROJECT_ID}_task
    - ${PROJECT_ID}_cron

vault:
  kvPath: "secret"